<infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:infinispan:config:14.0 https://infinispan.org/schemas/infinispan-config-14.0.xsd
                            urn:infinispan:server:14.0 https://infinispan.org/schemas/infinispan-server-14.0.xsd"
   xmlns="urn:infinispan:config:14.0"
   xmlns:server="urn:infinispan:server:14.0">

   <jgroups>
      <stack-file name="jgroups" path="jgroups.xml"/>
   </jgroups>

   <cache-container name="default" statistics="true">
      <transport cluster="${infinispan.cluster.name:cluster}" 
                 stack="${infinispan.cluster.stack:jgroups}" 
                 node-name="${infinispan.node.name:}"/>

      <security>
         <authorization/>
      </security>

      <serialization marshaller="org.infinispan.jboss.marshalling.commons.GenericJBossMarshaller">
         <allow-list>
            <class>org.keycloak.cluster.infinispan.WrapperClusterEvent</class>
            <regex>.*</regex>
         </allow-list>
      </serialization>

      <replicated-cache-configuration name="sessions-cfg" mode="SYNC" start="EAGER" statistics="${env.INFINISPAN_CACHE_STATISTICS:false}">
         <encoding media-type="application/x-protostream"/>

         <expiration lifespan="600" />
         <memory max-size="400MB" when-full="REMOVE"/>

         <persistence>
            <string-keyed-jdbc-store shared="true" xmlns="urn:infinispan:config:store:jdbc:14.0">
               <connection-pool connection-url="${infinispan.jdbc.uri:jdbc:postgresql://postgres:5432/keycloak}"
                              username="${infinispan.jdbc.username:keycloak}"
                              password="${infinispan.jdbc.password:keycloak}"
                              driver="org.postgresql.Driver"/>
               <string-keyed-table drop-on-exit="false"
                                 prefix="ISPN_STRING_TABLE">
                  <id-column name="ID_COLUMN" type="VARCHAR(255)" />
                  <data-column name="DATA_COLUMN" type="BYTEA" />
                  <timestamp-column name="TIMESTAMP_COLUMN" type="BIGINT" />
                  <segment-column name="SEGMENT_COLUMN" type="INT" />
               </string-keyed-table>
            </string-keyed-jdbc-store>
         </persistence>
      </replicated-cache-configuration>

      <replicated-cache name="sessions" configuration="sessions-cfg" />

      <replicated-cache name="clientSessions" configuration="sessions-cfg" />

      <distributed-cache name="authenticationSessions" configuration="sessions-cfg" />

      <distributed-cache name="offlineSessions" configuration="sessions-cfg" />

      <distributed-cache name="offlineClientSessions" configuration="sessions-cfg" />

      <distributed-cache name="actionTokens" configuration="sessions-cfg" />

      <distributed-cache name="loginFailures" configuration="sessions-cfg" />

      <replicated-cache name="work" configuration="sessions-cfg" />
   </cache-container>

   <server xmlns="urn:infinispan:server:14.0">
      <interfaces>
         <interface name="public">
            <inet-address value="${infinispan.bind.address:0.0.0.0}"/>
         </interface>
      </interfaces>

      <!-- If infinispan.socket.binding.port-offset:111 then infinispan.bind.port=11333 -->
      <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
         <socket-binding name="default" port="${infinispan.bind.port:11222}"/>
         <socket-binding name="memcached" port="11221"/>
      </socket-bindings>

      <security>
         <credential-stores>
            <credential-store name="credentials" path="credentials.pfx">
               <clear-text-credential clear-text="secret"/>
            </credential-store>
         </credential-stores>
         <security-realms>
            <security-realm name="default">
               <properties-realm groups-attribute="Roles">
                  <user-properties path="users.properties"/>
                  <group-properties path="groups.properties"/>
               </properties-realm>
            </security-realm>
         </security-realms>
      </security>

      <endpoints socket-binding="default" security-realm="default">
         <endpoint>
            <hotrod-connector name="hotrod">
               <authentication>
                  <sasl mechanisms="SCRAM-SHA-512 SCRAM-SHA-384 SCRAM-SHA-256
                                    SCRAM-SHA-1 DIGEST-SHA-512 DIGEST-SHA-384
                                    DIGEST-SHA-256 DIGEST-SHA DIGEST-MD5 PLAIN" server-name="infinispan" qop="auth"/>
               </authentication>
            </hotrod-connector>
            <rest-connector>
               <authentication mechanisms="DIGEST BASIC"/>
            </rest-connector>
         </endpoint>
      </endpoints>
   </server>
</infinispan>